{% comment %}
  @name Vertical Videos
  @description Una sección para mostrar videos en formato vertical tipo TikTok o Reels
  @version 1.0
{% endcomment %}

<div class="vertical-videos" id="VerticalVideos-{{ section.id }}">
  <div class="vertical-videos__container" style="
    --content-width: {{ section.settings.content_width }}px;
    --video-height: {{ section.settings.video_height }}px;
    --video-spacing: {{ section.settings.video_spacing }}px;
    --background-color: {{ section.settings.background_color }};
    --text-color: {{ section.settings.text_color }};
    --columns-desktop: {{ section.settings.columns_desktop }};
    --columns-mobile: {{ section.settings.columns_mobile }};
  ">
    {% if section.settings.title != blank %}
      <h2 class="vertical-videos__title">{{ section.settings.title }}</h2>
    {% endif %}
    
    {% if section.settings.description != blank %}
      <div class="vertical-videos__description">{{ section.settings.description }}</div>
    {% endif %}
    
    <div class="vertical-videos__grid">
      {% if section.blocks.size > 0 %}
        {% for block in section.blocks %}
          {% if block.type == 'video' %}
            <div class="vertical-videos__item" {{ block.shopify_attributes }}>
              <div class="vertical-videos__wrapper">
                <div class="vertical-videos__aspect-ratio">
                  {% if block.settings.video_url != blank %}
                    <div class="vertical-videos__video-container">
                      {% if block.settings.video_url contains "youtube" %}
                        {% assign video_id = block.settings.video_url | split: "v=" | last | split: "&" | first %}
                        <iframe 
                          class="vertical-videos__iframe" 
                          src="https://www.youtube.com/embed/{{ video_id }}?controls=1&rel=0&playsinline=1&enablejsapi=1" 
                          allowfullscreen 
                          allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                          loading="lazy"
                        ></iframe>
                      {% elsif block.settings.video_url contains "vimeo" %}
                        {% assign video_id = block.settings.video_url | split: "/" | last %}
                        <iframe 
                          class="vertical-videos__iframe" 
                          src="https://player.vimeo.com/video/{{ video_id }}?h=7a1caa1596&title=0&byline=0&portrait=0" 
                          allowfullscreen 
                          allow="autoplay; fullscreen; picture-in-picture" 
                          loading="lazy"
                        ></iframe>
                      {% elsif block.settings.video_url contains "tiktok" %}
                        <blockquote class="tiktok-embed" cite="{{ block.settings.video_url }}" data-video-id="{{ block.settings.video_url | split: "video/" | last }}">
                          <section></section>
                        </blockquote>
                        {% comment %}El script de TikTok se cargará de manera asíncrona mediante JavaScript{% endcomment %}
                      {% else %}
                        <div class="vertical-videos__error">
                          {{ 'vertical_videos.invalid_url' | t }}
                        </div>
                      {% endif %}
                    </div>
                  {% elsif block.settings.video_file != blank %}
                    <div class="vertical-videos__video-container">
                      <video 
                        class="vertical-videos__video" 
                        playsinline 
                        controls
                        {% if block.settings.autoplay %}autoplay muted loop{% endif %}
                        {% if block.settings.video_poster != blank %}
                          poster="{{ block.settings.video_poster | image_url }}"
                        {% endif %}
                      >
                        <source src="{{ block.settings.video_file }}" type="video/mp4">
                        {{ 'vertical_videos.not_supported' | t }}
                      </video>
                    </div>
                  {% elsif block.settings.video_html != blank %}
                    <div class="vertical-videos__html">
                      {{ block.settings.video_html }}
                    </div>
                  {% else %}
                    <div class="vertical-videos__placeholder">
                      {{ 'vertical_videos.add_video' | t }}
                    </div>
                  {% endif %}
                </div>
              </div>
              
              {% if block.settings.title != blank or block.settings.caption != blank %}
                <div class="vertical-videos__content">
                  {% if block.settings.title != blank %}
                    <h3 class="vertical-videos__video-title">{{ block.settings.title }}</h3>
                  {% endif %}
                  
                  {% if block.settings.caption != blank %}
                    <div class="vertical-videos__caption">{{ block.settings.caption }}</div>
                  {% endif %}
                  
                  {% if block.settings.show_button and block.settings.button_label != blank and block.settings.button_link != blank %}
                    <a href="{{ block.settings.button_link }}" class="vertical-videos__button {% if block.settings.button_style == 'secondary' %}vertical-videos__button--secondary{% endif %}" {% if block.settings.open_in_new_tab %}target="_blank" rel="noopener"{% endif %}>
                      {{ block.settings.button_label }}
                    </a>
                  {% endif %}
                </div>
              {% endif %}
            </div>
          {% endif %}
        {% endfor %}
      {% else %}
        <div class="vertical-videos__empty">
          <p>{{ 'vertical_videos.empty' | t }}</p>
        </div>
      {% endif %}
    </div>
  </div>
</div>

{% stylesheet %}
.vertical-videos {
  width: 100%;
  background-color: var(--background-color);
  color: var(--text-color);
  padding: 40px 0;
}

.vertical-videos__container {
  max-width: var(--content-width);
  margin: 0 auto;
  padding: 0 20px;
}

.vertical-videos__title {
  text-align: center;
  margin: 0 0 10px;
  font-size: 28px;
  font-weight: 700;
}

.vertical-videos__description {
  text-align: center;
  font-size: 16px;
  margin-bottom: 30px;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

.vertical-videos__grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: var(--video-spacing);
  margin-top: 30px;
}

.vertical-videos__item {
  display: flex;
  flex-direction: column;
  margin-bottom: 30px;
}

.vertical-videos__wrapper {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.vertical-videos__wrapper:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.vertical-videos__aspect-ratio {
  position: relative;
  width: 100%;
  padding-bottom: 177.78%; /* 9:16 vertical aspect ratio */
}

.vertical-videos__video-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #000;
}

.vertical-videos__iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}

.vertical-videos__video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  background-color: #000;
}

.vertical-videos__html {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.vertical-videos__placeholder,
.vertical-videos__error {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f5f5f5;
  text-align: center;
  padding: 20px;
  font-size: 14px;
  color: #666;
}

.vertical-videos__empty {
  grid-column: 1 / -1;
  text-align: center;
  padding: 40px;
  background-color: #f5f5f5;
  border-radius: 8px;
}

.vertical-videos__content {
  padding: 15px 0;
}

.vertical-videos__video-title {
  font-size: 18px;
  font-weight: 600;
  margin: 0 0 8px;
}

.vertical-videos__caption {
  font-size: 14px;
  margin-bottom: 15px;
  color: rgba(var(--text-color-rgb), 0.8);
}

.vertical-videos__button {
  display: inline-block;
  padding: 8px 16px;
  background-color: #000;
  color: #fff;
  text-decoration: none;
  border-radius: 4px;
  font-size: 14px;
  font-weight: 500;
  transition: background-color 0.3s ease;
}

.vertical-videos__button:hover {
  background-color: #333;
}

.vertical-videos__button--secondary {
  background-color: transparent;
  color: #000;
  border: 1px solid #000;
}

.vertical-videos__button--secondary:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

/* TikTok embeds need specific styling */
.tiktok-embed {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  margin: 0 !important;
}

@media screen and (min-width: 750px) {
  .vertical-videos {
    padding: 60px 0;
  }
  
  .vertical-videos__title {
    font-size: 36px;
    margin-bottom: 15px;
  }
  
  .vertical-videos__description {
    font-size: 18px;
    margin-bottom: 40px;
  }
  
  .vertical-videos__grid {
    grid-template-columns: repeat(var(--columns-desktop), 1fr);
  }
}

@media screen and (max-width: 749px) {
  .vertical-videos__grid {
    grid-template-columns: repeat(var(--columns-mobile), 1fr);
  }
}
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Cargar el script de TikTok si hay embeds de TikTok
    const tiktokEmbeds = document.querySelectorAll('.tiktok-embed');
    if (tiktokEmbeds.length > 0) {
      const tiktokScript = document.createElement('script');
      tiktokScript.async = true;
      tiktokScript.src = 'https://www.tiktok.com/embed.js';
      document.body.appendChild(tiktokScript);
    }
    
    // Manejar la reproducción de videos de Shopify cuando están en el viewport
    const shopifyVideos = document.querySelectorAll('#VerticalVideos-{{ section.id }} video');
    
    // Verificar que todos los videos tengan poster y src correctos
    shopifyVideos.forEach(video => {
      console.log('Video encontrado:', {
        poster: video.getAttribute('poster'),
        sources: Array.from(video.querySelectorAll('source')).map(source => ({
          src: source.getAttribute('src'),
          type: source.getAttribute('type')
        }))
      });
    });
    
    if (shopifyVideos.length > 0 && 'IntersectionObserver' in window) {
      const videoObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            try {
              // Algunos videos pueden tener controles de reproducción propios
              if (entry.target.paused) {
                entry.target.play().catch(e => {
                  // Silenciar si el navegador bloquea el autoplay
                  entry.target.muted = true;
                  entry.target.play().catch(console.error);
                });
              }
            } catch (e) {
              console.error('Error al intentar reproducir el video:', e);
            }
          } else {
            try {
              if (!entry.target.paused) {
                entry.target.pause();
              }
            } catch (e) {
              console.error('Error al intentar pausar el video:', e);
            }
          }
        });
      }, { threshold: 0.5 });
      
      shopifyVideos.forEach(video => {
        videoObserver.observe(video);
      });
    }
    
    // Gestionar iframes de YouTube para mejor rendimiento
    const youtubeIframes = document.querySelectorAll('#VerticalVideos-{{ section.id }} iframe[src*="youtube"]');
    
    if (youtubeIframes.length > 0 && 'IntersectionObserver' in window) {
      const youtubeObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          // La carga diferida ya está configurada con loading="lazy"
          // Aquí podríamos agregar código para pausar/reproducir videos si es necesario
        });
      }, { threshold: 0.3 });
      
      youtubeIframes.forEach(iframe => {
        youtubeObserver.observe(iframe);
      });
    }
  });
</script>

{% schema %}
{
  "name": "Videos verticales",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título",
      "default": "Videos destacados"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Descripción",
      "default": "<p>Explora nuestra colección de videos destacados</p>"
    },
    {
      "type": "header",
      "content": "Diseño"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "label": "Ancho máximo del contenido",
      "default": 1200
    },
    {
      "type": "range",
      "id": "video_height",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Altura máxima de los videos",
      "default": 600
    },
    {
      "type": "range",
      "id": "video_spacing",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Espacio entre videos",
      "default": 20
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Columnas en escritorio",
      "default": 3
    },
    {
      "type": "range",
      "id": "columns_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Columnas en móvil",
      "default": 1
    },
    {
      "type": "header",
      "content": "Colores"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Color de fondo",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Color de texto",
      "default": "#333333"
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Título del video",
          "default": "Título del video"
        },
        {
          "type": "richtext",
          "id": "caption",
          "label": "Descripción",
          "default": "<p>Breve descripción del video</p>"
        },
        {
          "type": "url",
          "id": "video_url",
          "label": "URL del video (YouTube, Vimeo o TikTok)",
          "info": "Si proporcionas un archivo de video, esta URL no se utilizará"
        },
        {
          "type": "url",
          "id": "video_file",
          "label": "URL del archivo de video MP4",
          "info": "Sube tu video MP4 a Shopify (Configuración > Archivos) y pega la URL aquí"
        },
        {
          "type": "html",
          "id": "video_html",
          "label": "Código HTML personalizado",
          "info": "Si proporcionas un URL o archivo, este código no se utilizará"
        },
        {
          "type": "image_picker",
          "id": "video_poster",
          "label": "Imagen de portada",
          "info": "Se muestra antes de reproducir el video"
        },
        {
          "type": "checkbox",
          "id": "autoplay",
          "label": "Reproducir automáticamente",
          "default": false,
          "info": "Se aplica solo a videos subidos directamente"
        },
        {
          "type": "header",
          "content": "Botón"
        },
        {
          "type": "checkbox",
          "id": "show_button",
          "label": "Mostrar botón",
          "default": false
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Texto del botón",
          "default": "Ver más"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Enlace del botón"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Estilo de botón",
          "options": [
            {
              "value": "primary",
              "label": "Principal"
            },
            {
              "value": "secondary",
              "label": "Secundario (contorno)"
            }
          ],
          "default": "primary"
        },
        {
          "type": "checkbox",
          "id": "open_in_new_tab",
          "label": "Abrir enlace en nueva pestaña",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Videos verticales",
      "blocks": [
        {
          "type": "video"
        },
        {
          "type": "video"
        },
        {
          "type": "video"
        }
      ]
    }
  ]
}
{% endschema %}
